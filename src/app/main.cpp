/*Здраствуйте! В этой версии есть недоточеты! Осталось
1) Если добавятся новые команды меняем readme file и help 
2)Возможно новые требования
3) Оптимизация
4) Заменить 127 и 255 на именованные константы
5) Дать нормальные имена парамтрам в DispetcherParams


Изменения: исправлен скрипт и main + исправлен алгоритм пути (теперь корректные проверки: 1. Углы считаются не пикселей, а колес (считаем что одно спереди одно сзади и два по бокам 
(как у детского велосипеда с опорой (такое решение я принял так как робот едит только по прямым, а на узлах поворачивается. Мне показалось что такое расположение колес более устойчивое в моем случае)))
 и не на всей карте а только на ребрах по которым едим (проверки динамические) (защита от гаусовых ямок и горок)
 2. Проверка что на бинарном срезе нет столкновений с компонентами (защита от больших стобов и дырок, чтобы не было столкновения и колесо не застряло)), также убрал лишнее + удален класс TerrainGrid 
 (хотел сделать сетку с заранее посчитаными углами, так как думал путь строить динамически, но пришел к выводу что сначала строится путь по датчикам потом начинается движение 
 и в таком случае интересны только углы на самом пути!) + триангуляция вынесена в отдельный класс

                           Программа готова!!! Но всю равно следите за обновлениями на гитхаб [GitHub Profile](https://github.com/DebugDestroy)
*/
#include "command/Control.hpp"
#include "command/Interface.hpp"

int main() {
    // Все пути считаются относительно корня (текущей директории)
    Config config("bin/etc/config.conf");
    Logger loggerinterface(config.logFileNameInterface, "Interface", config.FiltrationLogLevelInterface);
    Logger loggercontrol(config.logFileNameControl, "Control", config.FiltrationLogLevelControl);
    
    Control c(config, loggercontrol);
    Interface i(config, loggerinterface, c);
    
    i.print();
    return 0;
}
